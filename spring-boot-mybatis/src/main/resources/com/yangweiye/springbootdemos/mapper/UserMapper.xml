<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangweiye.springbootdemos.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.yangweiye.springbootdemos.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_name, sex, note
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.yangweiye.springbootdemos.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_user (id, user_name, sex,
        note)
        values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
        #{note,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.yangweiye.springbootdemos.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="note != null">
                note,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yangweiye.springbootdemos.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yangweiye.springbootdemos.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_user
        set user_name = #{userName,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=INTEGER},
        note = #{note,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="getUserInfo" parameterType="Integer" resultType="user" resultMap="userResult">
        select u.id as user_id,
               u.user_name,
               u.sex,
               u.note,
               r.id as role_id,
               r.name,
               r.salary
        from t_user as u
                 left join user_role_relation as ur on u.id = ur.user_id
                 left join role as r on r.id = ur.role_id
        where u.id = #{id}
    </select>

    <resultMap id="userResult" type="user">
        <id column="user_id" property="id"></id>
        <result column="user_name" property="userName"></result>
        <result column="sex" property="sex"></result>
        <result column="note" property="note"></result>

        <collection property="roleList" javaType="list" ofType="role">
            <id column="role_id" property="id"></id>
            <result column="name" property="name"></result>
            <result column="salary" property="salary"></result>
        </collection>
    </resultMap>
</mapper>